// Generated by CoffeeScript 2.0.0-beta4
Poltergeist.Cmd = class Cmd {
  constructor(owner, id, name, args) {
    this.owner = owner;
    this.id = id;
    this.name = name;
    this.args = args;
    this._response_sent = false;
  }

  sendResponse(response) {
    return Promise.resolve(response).then((res) => {
      var errors;
      if (!this._response_sent) {
        errors = this.browser.currentPage.errors;
        this.browser.currentPage.clearErrors();
        if (errors.length > 0 && this.browser.js_errors) {
          return this.sendError(new Poltergeist.JavascriptError(errors));
        } else {
          this.owner.sendResponse(this.id, res);
          return this._response_sent = true;
        }
      }
    }).catch((error) => {
      if (error instanceof Poltergeist.Error) {
        return this.sendError(error);
      } else {
        return this.sendError(new Poltergeist.BrowserError(error.toString(), error.stack));
      }
    });
  }

  sendError(errors) {
    if (!this._response_sent) {
      this.owner.sendError(this.id, errors);
      return this._response_sent = true;
    }
  }

  run(browser) {
    var error;
    this.browser = browser;
    try {
      return Promise.resolve(this.browser.runCommand(this)).catch((err) => {
        if (err instanceof Poltergeist.Error) {
          return this.sendError(err);
        } else {
          return this.sendError(new Poltergeist.BrowserError(err.toString(), err.stack));
        }
      });
    } catch (error1) {
      error = error1;
      if (error instanceof Poltergeist.Error) {
        return this.sendError(error);
      } else {
        return this.sendError(new Poltergeist.BrowserError(error.toString(), error.stack));
      }
    }
  }

};
